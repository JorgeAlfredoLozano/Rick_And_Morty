{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\punto\\\\Desktop\\\\Proyecto Integrador\\\\rick_and_morty\\\\src\\\\components\\\\Cards\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './Cards.css';\nimport Card from '../Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = _ref => {\n  _s();\n  let {\n    characters,\n    onClose\n  } = _ref;\n  const cardWidth = 280; // Ancho de cada carta en píxeles\n  const [translateX, setTranslateX] = useState(-cardWidth);\n  const numVisibleCards = 3; // Número de cartas visibles en el carrousel\n  const totalCards = characters.length;\n  const maxIndex = totalCards - numVisibleCards;\n  const nextDisabled = currentIndex >= maxIndex;\n  const prevDisabled = currentIndex === 0;\n  const handleNextClick = () => {\n    if (nextDisabled) {\n      return;\n    }\n    const newTranslateX = translateX - cardWidth;\n    setTranslateX(newTranslateX);\n    setCurrentIndex(currentIndex + 1);\n  };\n  const handlePrevClick = () => {\n    if (prevDisabled) {\n      return;\n    }\n    const newTranslateX = translateX + cardWidth;\n    setTranslateX(newTranslateX);\n    setCurrentIndex(currentIndex - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"cards-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"carousel-control\",\n        onClick: handlePrevClick,\n        disabled: prevDisabled,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"carousel-control\",\n        onClick: handleNextClick,\n        disabled: nextDisabled,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-wrapper\",\n      style: {\n        transform: `translateX(${translateX}px)`\n      },\n      children: characters.map(character => /*#__PURE__*/_jsxDEV(Card, {\n        id: character.id,\n        name: character.name,\n        status: character.status,\n        species: character.species,\n        gender: character.gender,\n        origin: character.origin.name,\n        image: character.image,\n        onClose: onClose\n      }, character.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"x9ay8ClSJKEDz1Dx+BZJaDoeT7g=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["useState","Card","jsxDEV","_jsxDEV","Cards","_ref","_s","characters","onClose","cardWidth","translateX","setTranslateX","numVisibleCards","totalCards","length","maxIndex","nextDisabled","currentIndex","prevDisabled","handleNextClick","newTranslateX","setCurrentIndex","handlePrevClick","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","style","transform","map","character","id","name","status","species","gender","origin","image","_c","$RefreshReg$"],"sources":["C:/Users/punto/Desktop/Proyecto Integrador/rick_and_morty/src/components/Cards/Cards.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport './Cards.css';\r\nimport Card from '../Card/Card';\r\n\r\nconst Cards = ({ characters, onClose }) => {\r\n  const cardWidth = 280; // Ancho de cada carta en píxeles\r\n  const [translateX, setTranslateX] = useState(-cardWidth);\r\n  const numVisibleCards = 3; // Número de cartas visibles en el carrousel\r\n  const totalCards = characters.length;\r\n  const maxIndex = totalCards - numVisibleCards;\r\n  const nextDisabled = currentIndex >= maxIndex;\r\n  const prevDisabled = currentIndex === 0;\r\n\r\n  const handleNextClick = () => {\r\n    if (nextDisabled) {\r\n      return;\r\n    }\r\n\r\n    const newTranslateX = translateX - cardWidth;\r\n    setTranslateX(newTranslateX);\r\n    setCurrentIndex(currentIndex + 1);\r\n  };\r\n\r\n  const handlePrevClick = () => {\r\n    if (prevDisabled) {\r\n      return;\r\n    }\r\n\r\n    const newTranslateX = translateX + cardWidth;\r\n    setTranslateX(newTranslateX);\r\n    setCurrentIndex(currentIndex - 1);\r\n  };\r\n\r\n  return (\r\n    <section className=\"cards-container\">\r\n            <div className=\"carousel-controls\">\r\n              <button className=\"carousel-control\" onClick={handlePrevClick} disabled={prevDisabled}>\r\n                Prev\r\n              </button>\r\n              <button className=\"carousel-control\" onClick={handleNextClick} disabled={nextDisabled}>\r\n                Next\r\n              </button>\r\n            </div>\r\n      <div className=\"cards-wrapper\" style={{ transform: `translateX(${translateX}px)` }}>\r\n        {characters.map((character) => (\r\n          <Card\r\n            key={character.id}\r\n            id={character.id}\r\n            name={character.name}\r\n            status={character.status}\r\n            species={character.species}\r\n            gender={character.gender}\r\n            origin={character.origin.name}\r\n            image={character.image}\r\n            onClose={onClose}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}