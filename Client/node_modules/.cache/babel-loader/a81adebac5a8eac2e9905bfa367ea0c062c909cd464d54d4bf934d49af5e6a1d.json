{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\punto\\\\Desktop\\\\Proyecto Integrador\\\\rick_and_morty\\\\src\\\\components\\\\Cards\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './Cards.css';\nimport Card from '../Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = _ref => {\n  _s();\n  let {\n    characters,\n    onClose\n  } = _ref;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const cardWidth = 280; // Ancho de cada carta en píxeles\n  const numVisibleCards = 5; // Número de cartas visibles en el carrousel\n  const totalCards = characters.length + 1; // Añade una carta vacía\n  const maxIndex = totalCards - numVisibleCards;\n  const nextDisabled = currentIndex >= maxIndex;\n  const prevDisabled = currentIndex === 0;\n  let x = 0;\n  if (totalCards === 1) {\n    x = 0;\n  } else {\n    x = -1500;\n  }\n  const [translateX, setTranslateX] = useState(x);\n  const handleNextClick = () => {\n    if (nextDisabled) {\n      return;\n    }\n    const newTranslateX = translateX - cardWidth;\n    setTranslateX(newTranslateX);\n    setCurrentIndex(currentIndex + 1);\n  };\n  const handlePrevClick = () => {\n    if (prevDisabled) {\n      return;\n    }\n    const newTranslateX = translateX + cardWidth;\n    setTranslateX(newTranslateX);\n    setCurrentIndex(currentIndex - 1);\n  };\n\n  // Determina si la carta vacía debe ser visible o no\n  let hideEmptyCard = true;\n  console.log(totalCards);\n  if (totalCards >= 1) {\n    hideEmptyCard = true;\n  } else {\n    hideEmptyCard = false;\n  }\n\n  // Agrega la carta vacía al principio de la matriz de personajes\n  const charactersWithEmptyCard = totalCards === 1 ? [{\n    empty: true\n  }, ...characters, ...characters] : [{\n    empty: true\n  }, ...characters];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"cards-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"carousel-control\",\n        onClick: handlePrevClick,\n        disabled: prevDisabled,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"carousel-control\",\n        onClick: handleNextClick,\n        disabled: nextDisabled,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-wrapper\",\n      style: {\n        transform: `translateX(${translateX}px)`\n      },\n      children: charactersWithEmptyCard.map((character, index) => {\n        var _character$origin;\n        if (character.empty && hideEmptyCard) {\n          return null;\n        }\n        return /*#__PURE__*/_jsxDEV(Card, {\n          // Usa el índice como clave para la carta vacía\n          id: character.id,\n          name: character.name,\n          status: character.status,\n          species: character.species,\n          gender: character.gender,\n          origin: (_character$origin = character.origin) === null || _character$origin === void 0 ? void 0 : _character$origin.name,\n          image: character.image,\n          onClose: onClose,\n          className: character.empty ? 'card-empty' : ''\n        }, character.id || index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"1txyo1pQb0j0Pl8l+WSmhpuzirA=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["useState","Card","jsxDEV","_jsxDEV","Cards","_ref","_s","characters","onClose","currentIndex","setCurrentIndex","cardWidth","numVisibleCards","totalCards","length","maxIndex","nextDisabled","prevDisabled","x","translateX","setTranslateX","handleNextClick","newTranslateX","handlePrevClick","hideEmptyCard","console","log","charactersWithEmptyCard","empty","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","style","transform","map","character","index","_character$origin","id","name","status","species","gender","origin","image","_c","$RefreshReg$"],"sources":["C:/Users/punto/Desktop/Proyecto Integrador/rick_and_morty/src/components/Cards/Cards.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport './Cards.css';\r\nimport Card from '../Card/Card';\r\n\r\nconst Cards = ({ characters, onClose }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  \r\n  const cardWidth = 280; // Ancho de cada carta en píxeles\r\n  const numVisibleCards = 5; // Número de cartas visibles en el carrousel\r\n  const totalCards = characters.length + 1; // Añade una carta vacía\r\n  const maxIndex = totalCards - numVisibleCards;\r\n  const nextDisabled = currentIndex >= maxIndex;\r\n  const prevDisabled = currentIndex === 0;\r\n  let x=0\r\n  if (totalCards===1) {\r\n    x=0\r\n  } else {x=-1500 }\r\n  const [translateX, setTranslateX] = useState(x);\r\n  const handleNextClick = () => {\r\n    if (nextDisabled) {\r\n      return;\r\n    }\r\n\r\n    const newTranslateX = translateX - cardWidth;\r\n    setTranslateX(newTranslateX);\r\n    setCurrentIndex(currentIndex + 1);\r\n  };\r\n\r\n  const handlePrevClick = () => {\r\n    if (prevDisabled) {\r\n      return;\r\n    }\r\n\r\n    const newTranslateX = translateX + cardWidth;\r\n    setTranslateX(newTranslateX);\r\n    setCurrentIndex(currentIndex - 1);\r\n  };\r\n  \r\n // Determina si la carta vacía debe ser visible o no\r\n let hideEmptyCard = true\r\n console.log(totalCards)\r\n if(totalCards>=1) {hideEmptyCard = true}\r\n    else {hideEmptyCard=false}\r\n\r\n  // Agrega la carta vacía al principio de la matriz de personajes\r\n  const charactersWithEmptyCard = totalCards === 1 ? [{ empty: true }, ...characters, ...characters] : [{ empty: true }, ...characters]\r\n\r\n\r\n  \r\n  return (\r\n    <section className=\"cards-container\">\r\n      <div className=\"carousel-controls\">\r\n        <button className=\"carousel-control\" onClick={handlePrevClick} disabled={prevDisabled}>\r\n          Prev\r\n        </button>\r\n        <button className=\"carousel-control\" onClick={handleNextClick} disabled={nextDisabled}>\r\n          Next\r\n        </button>\r\n      </div>\r\n      <div className=\"cards-wrapper\" style={{ transform: `translateX(${translateX}px)` }}>\r\n        {charactersWithEmptyCard.map((character, index) => {\r\n          if (character.empty && hideEmptyCard) {\r\n            return null;\r\n          }\r\n          return (\r\n            <Card\r\n              key={character.id || index} // Usa el índice como clave para la carta vacía\r\n              id={character.id}\r\n              name={character.name}\r\n              status={character.status}\r\n              species={character.species}\r\n              gender={character.gender}\r\n              origin={character.origin?.name}\r\n              image={character.image}\r\n              onClose={onClose}\r\n              className={character.empty ? 'card-empty' : ''}\r\n            />\r\n          )\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}