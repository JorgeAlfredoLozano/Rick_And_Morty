{"ast":null,"code":"export const validate = userData => {\n  let errors = {\n    email: '',\n    password: ''\n  };\n\n  // Email validation\n  const emailRegex = /\\S+@\\S+\\.\\S+/;\n  if (!emailRegex.test(userData.email)) {\n    errors.email = 'Por favor, ingrese un email válido';\n  } else if (userData.email.length > 35) {\n    errors.email = 'El email no puede tener más de 35 caracteres';\n  }\n\n  // Password validation\n  if (!userData.password.trim()) {\n    errors.password = 'La contraseña no puede estar vacía';\n  } else if (userData.password.length < 6) {\n    errors.password = 'La contraseña debe tener al menos 6 caracteres';\n  } else if (userData.password.length > 10) {\n    errors.password = 'La contraseña no puede tener más de 10 caracteres';\n  } else if (!/\\d/.test(userData.password)) {\n    errors.password = 'La contraseña debe contener al menos un número';\n  }\n  return errors;\n};","map":{"version":3,"names":["validate","userData","errors","email","password","emailRegex","test","length","trim"],"sources":["C:/Users/punto/Desktop/Proyecto Integrador/rick_and_morty/src/components/validation.js"],"sourcesContent":["export const validate = (userData) => {\r\n    let errors = {\r\n        email: '',\r\n        password: ''\r\n    };\r\n    \r\n    // Email validation\r\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n    if (!emailRegex.test(userData.email)) {\r\n        errors.email = 'Por favor, ingrese un email válido';\r\n    } else if (userData.email.length > 35) {\r\n        errors.email = 'El email no puede tener más de 35 caracteres';\r\n    }\r\n    \r\n    // Password validation\r\n    if (!userData.password.trim()) {\r\n        errors.password = 'La contraseña no puede estar vacía';\r\n      } else if (userData.password.length < 6) {\r\n        errors.password = 'La contraseña debe tener al menos 6 caracteres';\r\n      } else if (userData.password.length > 10) {\r\n        errors.password = 'La contraseña no puede tener más de 10 caracteres';\r\n      } else if (!/\\d/.test(userData.password)) {\r\n        errors.password = 'La contraseña debe contener al menos un número';\r\n      }\r\n    \r\n    return errors;\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,QAAQ,IAAK;EAClC,IAAIC,MAAM,GAAG;IACTC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC;;EAED;EACA,MAAMC,UAAU,GAAG,cAAc;EACjC,IAAI,CAACA,UAAU,CAACC,IAAI,CAACL,QAAQ,CAACE,KAAK,CAAC,EAAE;IAClCD,MAAM,CAACC,KAAK,GAAG,oCAAoC;EACvD,CAAC,MAAM,IAAIF,QAAQ,CAACE,KAAK,CAACI,MAAM,GAAG,EAAE,EAAE;IACnCL,MAAM,CAACC,KAAK,GAAG,8CAA8C;EACjE;;EAEA;EACA,IAAI,CAACF,QAAQ,CAACG,QAAQ,CAACI,IAAI,EAAE,EAAE;IAC3BN,MAAM,CAACE,QAAQ,GAAG,oCAAoC;EACxD,CAAC,MAAM,IAAIH,QAAQ,CAACG,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;IACvCL,MAAM,CAACE,QAAQ,GAAG,gDAAgD;EACpE,CAAC,MAAM,IAAIH,QAAQ,CAACG,QAAQ,CAACG,MAAM,GAAG,EAAE,EAAE;IACxCL,MAAM,CAACE,QAAQ,GAAG,mDAAmD;EACvE,CAAC,MAAM,IAAI,CAAC,IAAI,CAACE,IAAI,CAACL,QAAQ,CAACG,QAAQ,CAAC,EAAE;IACxCF,MAAM,CAACE,QAAQ,GAAG,gDAAgD;EACpE;EAEF,OAAOF,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}