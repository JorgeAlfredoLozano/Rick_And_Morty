{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\punto\\\\Desktop\\\\Proyecto Integrador\\\\rick_and_morty\\\\src\\\\components\\\\Cards\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './Cards.css';\nimport Card from '../Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = _ref => {\n  _s();\n  let {\n    characters,\n    onClose\n  } = _ref;\n  const cardWidth = 280;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [translateX, setTranslateX] = useState(0);\n  const numVisibleCards = 3; // Número de cartas visibles en el carrousel\n  const totalCards = characters.length;\n  const maxIndex = totalCards - numVisibleCards;\n  const nextDisabled = currentIndex >= maxIndex;\n  const prevDisabled = currentIndex === 0;\n  useEffect(() => {\n    if (currentIndex >= totalCards) {\n      const newTranslateX = (totalCards - numVisibleCards) * -cardWidth;\n      setTranslateX(newTranslateX);\n      setCurrentIndex(totalCards - numVisibleCards);\n    }\n  }, [currentIndex, numVisibleCards, totalCards]);\n  const handleNextClick = () => {\n    if (nextDisabled) {\n      return;\n    }\n    const newTranslateX = translateX - cardWidth;\n    setTranslateX(newTranslateX);\n    setCurrentIndex(currentIndex + 1);\n  };\n  const handlePrevClick = () => {\n    if (prevDisabled) {\n      return;\n    }\n    const newTranslateX = translateX + cardWidth;\n    setTranslateX(newTranslateX);\n    setCurrentIndex(currentIndex - 1);\n  };\n  const emptyCardsCount = numVisibleCards - totalCards;\n  const emptyCards = Array.from({\n    length: emptyCardsCount\n  }, (_, i) => ({\n    id: `empty-${i}`\n  }));\n  const visibleCharacters = [...characters, ...emptyCards].slice(currentIndex, currentIndex + numVisibleCards);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"cards-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"carousel-control\",\n        onClick: handlePrevClick,\n        disabled: prevDisabled,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"carousel-control\",\n        onClick: handleNextClick,\n        disabled: nextDisabled,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-wrapper\",\n      style: {\n        transform: `translateX(${translateX}px)`\n      },\n      children: visibleCharacters.map(character => /*#__PURE__*/_jsxDEV(Card, {\n        id: character.id,\n        name: character.name,\n        status: character.status,\n        species: character.species,\n        gender: character.gender,\n        origin: character.origin.name,\n        image: character.image,\n        onClose: onClose,\n        isEmpty: character.id.startsWith('empty')\n      }, character.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"FcQCJR+fK6vZTGbD6LZ9Ahm6X8g=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["useState","useEffect","Card","jsxDEV","_jsxDEV","Cards","_ref","_s","characters","onClose","cardWidth","currentIndex","setCurrentIndex","translateX","setTranslateX","numVisibleCards","totalCards","length","maxIndex","nextDisabled","prevDisabled","newTranslateX","handleNextClick","handlePrevClick","emptyCardsCount","emptyCards","Array","from","_","i","id","visibleCharacters","slice","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","style","transform","map","character","name","status","species","gender","origin","image","isEmpty","startsWith","_c","$RefreshReg$"],"sources":["C:/Users/punto/Desktop/Proyecto Integrador/rick_and_morty/src/components/Cards/Cards.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './Cards.css';\r\nimport Card from '../Card/Card';\r\n\r\nconst Cards = ({ characters, onClose }) => {\r\n  const cardWidth = 280;\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [translateX, setTranslateX] = useState(0);\r\n  const numVisibleCards = 3; // Número de cartas visibles en el carrousel\r\n  const totalCards = characters.length;\r\n  const maxIndex = totalCards - numVisibleCards;\r\n  const nextDisabled = currentIndex >= maxIndex;\r\n  const prevDisabled = currentIndex === 0;\r\n\r\n  useEffect(() => {\r\n    if (currentIndex >= totalCards) {\r\n      const newTranslateX = (totalCards - numVisibleCards) * -cardWidth;\r\n      setTranslateX(newTranslateX);\r\n      setCurrentIndex(totalCards - numVisibleCards);\r\n    }\r\n  }, [currentIndex, numVisibleCards, totalCards]);\r\n\r\n  const handleNextClick = () => {\r\n    if (nextDisabled) {\r\n      return;\r\n    }\r\n\r\n    const newTranslateX = translateX - cardWidth;\r\n    setTranslateX(newTranslateX);\r\n    setCurrentIndex(currentIndex + 1);\r\n  };\r\n\r\n  const handlePrevClick = () => {\r\n    if (prevDisabled) {\r\n      return;\r\n    }\r\n\r\n    const newTranslateX = translateX + cardWidth;\r\n    setTranslateX(newTranslateX);\r\n    setCurrentIndex(currentIndex - 1);\r\n  };\r\n\r\n  const emptyCardsCount = numVisibleCards - totalCards;\r\n  const emptyCards = Array.from({ length: emptyCardsCount }, (_, i) => ({ id: `empty-${i}` }));\r\n  const visibleCharacters = [...characters, ...emptyCards].slice(currentIndex, currentIndex + numVisibleCards);\r\n\r\n  return (\r\n    <section className=\"cards-container\">\r\n      <div className=\"carousel-controls\">\r\n        <button className=\"carousel-control\" onClick={handlePrevClick} disabled={prevDisabled}>\r\n          Prev\r\n        </button>\r\n        <button className=\"carousel-control\" onClick={handleNextClick} disabled={nextDisabled}>\r\n          Next\r\n        </button>\r\n      </div>\r\n      <div className=\"cards-wrapper\" style={{ transform: `translateX(${translateX}px)` }}>\r\n        {visibleCharacters.map((character) => (\r\n          <Card\r\n            key={character.id}\r\n            id={character.id}\r\n            name={character.name}\r\n            status={character.status}\r\n            species={character.species}\r\n            gender={character.gender}\r\n            origin={character.origin.name}\r\n            image={character.image}\r\n            onClose={onClose}\r\n            isEmpty={character.id.startsWith('empty')}\r\n          />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,aAAa;AACpB,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,KAAK,GAAGC,IAAA,IAA6B;EAAAC,EAAA;EAAA,IAA5B;IAAEC,UAAU;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EACpC,MAAMI,SAAS,GAAG,GAAG;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAMe,eAAe,GAAG,CAAC,CAAC,CAAC;EAC3B,MAAMC,UAAU,GAAGR,UAAU,CAACS,MAAM;EACpC,MAAMC,QAAQ,GAAGF,UAAU,GAAGD,eAAe;EAC7C,MAAMI,YAAY,GAAGR,YAAY,IAAIO,QAAQ;EAC7C,MAAME,YAAY,GAAGT,YAAY,KAAK,CAAC;EAEvCV,SAAS,CAAC,MAAM;IACd,IAAIU,YAAY,IAAIK,UAAU,EAAE;MAC9B,MAAMK,aAAa,GAAG,CAACL,UAAU,GAAGD,eAAe,IAAI,CAACL,SAAS;MACjEI,aAAa,CAACO,aAAa,CAAC;MAC5BT,eAAe,CAACI,UAAU,GAAGD,eAAe,CAAC;IAC/C;EACF,CAAC,EAAE,CAACJ,YAAY,EAAEI,eAAe,EAAEC,UAAU,CAAC,CAAC;EAE/C,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIH,YAAY,EAAE;MAChB;IACF;IAEA,MAAME,aAAa,GAAGR,UAAU,GAAGH,SAAS;IAC5CI,aAAa,CAACO,aAAa,CAAC;IAC5BT,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;EACnC,CAAC;EAED,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIH,YAAY,EAAE;MAChB;IACF;IAEA,MAAMC,aAAa,GAAGR,UAAU,GAAGH,SAAS;IAC5CI,aAAa,CAACO,aAAa,CAAC;IAC5BT,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;EACnC,CAAC;EAED,MAAMa,eAAe,GAAGT,eAAe,GAAGC,UAAU;EACpD,MAAMS,UAAU,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEV,MAAM,EAAEO;EAAgB,CAAC,EAAE,CAACI,CAAC,EAAEC,CAAC,MAAM;IAAEC,EAAE,EAAG,SAAQD,CAAE;EAAE,CAAC,CAAC,CAAC;EAC5F,MAAME,iBAAiB,GAAG,CAAC,GAAGvB,UAAU,EAAE,GAAGiB,UAAU,CAAC,CAACO,KAAK,CAACrB,YAAY,EAAEA,YAAY,GAAGI,eAAe,CAAC;EAE5G,oBACEX,OAAA;IAAS6B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAClC9B,OAAA;MAAK6B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC9B,OAAA;QAAQ6B,SAAS,EAAC,kBAAkB;QAACE,OAAO,EAAEZ,eAAgB;QAACa,QAAQ,EAAEhB,YAAa;QAAAc,QAAA,EAAC;MAEvF;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACTpC,OAAA;QAAQ6B,SAAS,EAAC,kBAAkB;QAACE,OAAO,EAAEb,eAAgB;QAACc,QAAQ,EAAEjB,YAAa;QAAAe,QAAA,EAAC;MAEvF;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACNpC,OAAA;MAAK6B,SAAS,EAAC,eAAe;MAACQ,KAAK,EAAE;QAAEC,SAAS,EAAG,cAAa7B,UAAW;MAAK,CAAE;MAAAqB,QAAA,EAChFH,iBAAiB,CAACY,GAAG,CAAEC,SAAS,iBAC/BxC,OAAA,CAACF,IAAI;QAEH4B,EAAE,EAAEc,SAAS,CAACd,EAAG;QACjBe,IAAI,EAAED,SAAS,CAACC,IAAK;QACrBC,MAAM,EAAEF,SAAS,CAACE,MAAO;QACzBC,OAAO,EAAEH,SAAS,CAACG,OAAQ;QAC3BC,MAAM,EAAEJ,SAAS,CAACI,MAAO;QACzBC,MAAM,EAAEL,SAAS,CAACK,MAAM,CAACJ,IAAK;QAC9BK,KAAK,EAAEN,SAAS,CAACM,KAAM;QACvBzC,OAAO,EAAEA,OAAQ;QACjB0C,OAAO,EAAEP,SAAS,CAACd,EAAE,CAACsB,UAAU,CAAC,OAAO;MAAE,GATrCR,SAAS,CAACd,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAWpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEd,CAAC;AAACjC,EAAA,CAtEIF,KAAK;AAAAgD,EAAA,GAALhD,KAAK;AAwEX,eAAeA,KAAK;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}