{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\punto\\\\Desktop\\\\Proyecto Integrador\\\\rick_and_morty\\\\src\\\\components\\\\Cards\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './Cards.css';\nimport Card from '../Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = _ref => {\n  _s();\n  let {\n    characters,\n    onClose\n  } = _ref;\n  const [currentIndex, setCurrentIndex] = useState(1); // Empieza en 1 en vez de 0 para saltar la carta vacía\n  const [translateX, setTranslateX] = useState(-280); // Empieza en -280 para mostrar la primera carta real\n  const cardWidth = 280; // Ancho de cada carta en píxeles\n  const numVisibleCards = 3; // Número de cartas visibles en el carrousel\n  const totalCards = characters.length + 1; // Añade una carta vacía\n  const maxIndex = totalCards - numVisibleCards - 1; // Resta 1 para no contar la carta vacía\n  const nextDisabled = currentIndex >= maxIndex;\n  const prevDisabled = currentIndex === 1; // La carta vacía no se puede seleccionar\n\n  const handleNextClick = () => {\n    if (nextDisabled) {\n      return;\n    }\n    const newTranslateX = translateX - cardWidth;\n    setTranslateX(newTranslateX);\n    setCurrentIndex(currentIndex + 1);\n  };\n  const handlePrevClick = () => {\n    if (prevDisabled) {\n      return;\n    }\n    const newTranslateX = translateX + cardWidth;\n    setTranslateX(newTranslateX);\n    setCurrentIndex(currentIndex - 1);\n  };\n\n  // Agrega la carta vacía al principio de la matriz de personajes\n  const charactersWithEmptyCard = [{\n    empty: true\n  }, ...characters];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"cards-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"carousel-control\",\n        onClick: handlePrevClick,\n        disabled: prevDisabled,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"carousel-control\",\n        onClick: handleNextClick,\n        disabled: nextDisabled,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-wrapper\",\n      style: {\n        transform: `translateX(${translateX}px)`\n      },\n      children: charactersWithEmptyCard.map((character, index) => {\n        var _character$origin;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          // Usa el índice como clave para la carta vacía\n          id: character.id,\n          name: character.name,\n          status: character.status,\n          species: character.species,\n          gender: character.gender,\n          origin: (_character$origin = character.origin) === null || _character$origin === void 0 ? void 0 : _character$origin.name,\n          image: character.image,\n          onClose: onClose,\n          className: character.empty ? 'card-empty' : '' // Agrega una clase CSS para la carta vacía\n        }, character.id || index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"wR32i6NV1ZSj5HWtOJxf+Fp5nb8=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["useState","Card","jsxDEV","_jsxDEV","Cards","_ref","_s","characters","onClose","currentIndex","setCurrentIndex","translateX","setTranslateX","cardWidth","numVisibleCards","totalCards","length","maxIndex","nextDisabled","prevDisabled","handleNextClick","newTranslateX","handlePrevClick","charactersWithEmptyCard","empty","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","style","transform","map","character","index","_character$origin","id","name","status","species","gender","origin","image","_c","$RefreshReg$"],"sources":["C:/Users/punto/Desktop/Proyecto Integrador/rick_and_morty/src/components/Cards/Cards.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport './Cards.css';\r\nimport Card from '../Card/Card';\r\n\r\nconst Cards = ({ characters, onClose }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(1); // Empieza en 1 en vez de 0 para saltar la carta vacía\r\n  const [translateX, setTranslateX] = useState(-280); // Empieza en -280 para mostrar la primera carta real\r\n  const cardWidth = 280; // Ancho de cada carta en píxeles\r\n  const numVisibleCards = 3; // Número de cartas visibles en el carrousel\r\n  const totalCards = characters.length + 1; // Añade una carta vacía\r\n  const maxIndex = totalCards - numVisibleCards - 1; // Resta 1 para no contar la carta vacía\r\n  const nextDisabled = currentIndex >= maxIndex;\r\n  const prevDisabled = currentIndex === 1; // La carta vacía no se puede seleccionar\r\n\r\n  const handleNextClick = () => {\r\n    if (nextDisabled) {\r\n      return;\r\n    }\r\n\r\n    const newTranslateX = translateX - cardWidth;\r\n    setTranslateX(newTranslateX);\r\n    setCurrentIndex(currentIndex + 1);\r\n  };\r\n\r\n  const handlePrevClick = () => {\r\n    if (prevDisabled) {\r\n      return;\r\n    }\r\n\r\n    const newTranslateX = translateX + cardWidth;\r\n    setTranslateX(newTranslateX);\r\n    setCurrentIndex(currentIndex - 1);\r\n  };\r\n  \r\n  // Agrega la carta vacía al principio de la matriz de personajes\r\n  const charactersWithEmptyCard = [{ empty: true }, ...characters];\r\n\r\n  return (\r\n    <section className=\"cards-container\">\r\n      <div className=\"carousel-controls\">\r\n        <button className=\"carousel-control\" onClick={handlePrevClick} disabled={prevDisabled}>\r\n          Prev\r\n        </button>\r\n        <button className=\"carousel-control\" onClick={handleNextClick} disabled={nextDisabled}>\r\n          Next\r\n        </button>\r\n      </div>\r\n      <div className=\"cards-wrapper\" style={{ transform: `translateX(${translateX}px)` }}>\r\n        {charactersWithEmptyCard.map((character, index) => (\r\n          <Card\r\n            key={character.id || index} // Usa el índice como clave para la carta vacía\r\n            id={character.id}\r\n            name={character.name}\r\n            status={character.status}\r\n            species={character.species}\r\n            gender={character.gender}\r\n            origin={character.origin?.name}\r\n            image={character.image}\r\n            onClose={onClose}\r\n            className={character.empty ? 'card-empty' : ''} // Agrega una clase CSS para la carta vacía\r\n          />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,aAAa;AACpB,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,KAAK,GAAGC,IAAA,IAA6B;EAAAC,EAAA;EAAA,IAA5B;IAAEC,UAAU;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EACpC,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACpD,MAAMa,SAAS,GAAG,GAAG,CAAC,CAAC;EACvB,MAAMC,eAAe,GAAG,CAAC,CAAC,CAAC;EAC3B,MAAMC,UAAU,GAAGR,UAAU,CAACS,MAAM,GAAG,CAAC,CAAC,CAAC;EAC1C,MAAMC,QAAQ,GAAGF,UAAU,GAAGD,eAAe,GAAG,CAAC,CAAC,CAAC;EACnD,MAAMI,YAAY,GAAGT,YAAY,IAAIQ,QAAQ;EAC7C,MAAME,YAAY,GAAGV,YAAY,KAAK,CAAC,CAAC,CAAC;;EAEzC,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIF,YAAY,EAAE;MAChB;IACF;IAEA,MAAMG,aAAa,GAAGV,UAAU,GAAGE,SAAS;IAC5CD,aAAa,CAACS,aAAa,CAAC;IAC5BX,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;EACnC,CAAC;EAED,MAAMa,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIH,YAAY,EAAE;MAChB;IACF;IAEA,MAAME,aAAa,GAAGV,UAAU,GAAGE,SAAS;IAC5CD,aAAa,CAACS,aAAa,CAAC;IAC5BX,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;EACnC,CAAC;;EAED;EACA,MAAMc,uBAAuB,GAAG,CAAC;IAAEC,KAAK,EAAE;EAAK,CAAC,EAAE,GAAGjB,UAAU,CAAC;EAEhE,oBACEJ,OAAA;IAASsB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAClCvB,OAAA;MAAKsB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCvB,OAAA;QAAQsB,SAAS,EAAC,kBAAkB;QAACE,OAAO,EAAEL,eAAgB;QAACM,QAAQ,EAAET,YAAa;QAAAO,QAAA,EAAC;MAEvF;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACT7B,OAAA;QAAQsB,SAAS,EAAC,kBAAkB;QAACE,OAAO,EAAEP,eAAgB;QAACQ,QAAQ,EAAEV,YAAa;QAAAQ,QAAA,EAAC;MAEvF;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACN7B,OAAA;MAAKsB,SAAS,EAAC,eAAe;MAACQ,KAAK,EAAE;QAAEC,SAAS,EAAG,cAAavB,UAAW;MAAK,CAAE;MAAAe,QAAA,EAChFH,uBAAuB,CAACY,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK;QAAA,IAAAC,iBAAA;QAAA,oBAC5CnC,OAAA,CAACF,IAAI;UACyB;UAC5BsC,EAAE,EAAEH,SAAS,CAACG,EAAG;UACjBC,IAAI,EAAEJ,SAAS,CAACI,IAAK;UACrBC,MAAM,EAAEL,SAAS,CAACK,MAAO;UACzBC,OAAO,EAAEN,SAAS,CAACM,OAAQ;UAC3BC,MAAM,EAAEP,SAAS,CAACO,MAAO;UACzBC,MAAM,GAAAN,iBAAA,GAAEF,SAAS,CAACQ,MAAM,cAAAN,iBAAA,uBAAhBA,iBAAA,CAAkBE,IAAK;UAC/BK,KAAK,EAAET,SAAS,CAACS,KAAM;UACvBrC,OAAO,EAAEA,OAAQ;UACjBiB,SAAS,EAAEW,SAAS,CAACZ,KAAK,GAAG,YAAY,GAAG,EAAG,CAAC;QAAA,GAT3CY,SAAS,CAACG,EAAE,IAAIF,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAU1B;MAAA,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEd,CAAC;AAAC1B,EAAA,CA7DIF,KAAK;AAAA0C,EAAA,GAAL1C,KAAK;AA+DX,eAAeA,KAAK;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}