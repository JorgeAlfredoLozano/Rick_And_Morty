{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\punto\\\\Desktop\\\\Proyecto Integrador\\\\rick_and_morty\\\\src\\\\components\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { validate } from '../validation';\nimport \"./Form.css\";\nimport fondoForm from '../../assets/login-form.png';\nimport intro from '../../assets/RickAndMorty.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Form = props => {\n  _s();\n  const [userData, setUserData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({\n    email: '',\n    password: ''\n  });\n  const [isMuted, setIsMuted] = useState(false);\n  const handleOnChange = event => {\n    //controlo para que el input sea siempre igual al valor del estado, en el input coloco el onChange\n    const {\n      name,\n      value\n    } = event.target; //aplico destructuring\n    // Usar una función para actualizar el estado con el estado anterior\n    setUserData(prevUserData => ({\n      // hago una copia del estado para no pisarlo y igualo a la propiedad name con value del target\n      ...prevUserData,\n      [name]: value\n    }));\n\n    // Invocar la función de validación\n    const errors = validate({\n      ...userData,\n      [name]: value\n    });\n    setErrors(errors);\n  };\n  useEffect(() => {\n    const audio = document.getElementById(\"myAudio\");\n    audio.play();\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    props.login(userData);\n  };\n  const handleMute = () => {\n    setIsMuted(!isMuted);\n    const audio = document.getElementById(\"myAudio\");\n    audio.muted = !audio.muted;\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"title\",\n        src: fondoForm,\n        alt: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        className: \"title-middle-email\",\n        children: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"title-input-email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Ingrese su email\",\n        value: userData.email,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: \"title-middle-password\",\n        children: \"contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"title-input-password\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Ingrese su contrase\\xF1a\",\n        value: userData.password,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        disabled: !userData.email || !userData.password || errors.email || errors.password,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"alert-error-message-mail\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 34\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"alert-error-message-pass\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 37\n      }, this), userData.email && userData.password && !errors.email && !errors.password && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-success\",\n          children: \"Sus datos son correctos Rick!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-successB\",\n          children: \"Presiona enviar y Bienvenido!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"zmf7yVj/9x7B9543yTA4BIvQL9o=\");\n_c = Form;\nexport default Form;\n\n// import { useState } from \"react\";\n\n// const Form = () => {\n//     const [userData, setUserData] = useState({\n//         email: '',\n//         password: ''\n//     })\n\n//     const [errors, setErrors] = useState({\n//         email: '',\n//         password: ''\n//     })\n\n//     const handleOnChange = (event) => {\n//         console.log(event.target.name);\n//         setUserData({\n//             ...userData,\n//             [event.target.name]: event.target.value\n//         })\n//         validate()\n//     }\n\n//     const validate = () => {\n//         if (!/\\S+@\\S+\\.\\S+/.test(userData.email)) {\n//           setErrors((prevState) => ({\n//             ...prevState,\n//             email: 'por favor, revisa tu email, rey/reina'\n//           }));\n//         } else {\n//           setErrors((prevState) => ({\n//             ...prevState,\n//             email: ''\n//           }));\n//         }\n\n//         if (userData.password.length < 6) {\n//           setErrors((prevState) => ({\n//             ...prevState,\n//             password: 'tiene que tener un mínimo de 6 caracteres'\n//           }));\n//         } else {\n//           setErrors((prevState) => ({\n//             ...prevState,\n//             password: ''\n//           }));\n//         }\n//     };\n\n//     const handleOnSubmit = (event) => {\n//         event.preventDefault()\n//     }\n\n//     return(\n//         <form onSubmit={handleOnSubmit}>\n//             <h1>Holi, soy el Form</h1>\n\n//             <label htmlFor=\"email\">Email: </label>\n//             <input name=\"email\" type=\"email\" placeholder=\"ingrese su mail\" value={userData.email} onChange={handleOnChange} />\n//             {errors.email && <p>{errors.email}</p>}\n//             <hr />\n//             <label htmlFor=\"password\">Password: </label>\n//             <input name=\"password\" type=\"text\" placeholder=\"ingrese una password\" value={userData.password} onChange={handleOnChange}  />\n//             {errors.password && <p>{errors.password}</p>}\n//             <hr />\n//             <button disabled={!userData.email || !userData.password || errors.email || errors.password} >Enviar</button>\n//         </form>\n//     )\n// }\n\n// export default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","useEffect","validate","fondoForm","intro","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","props","_s","userData","setUserData","email","password","errors","setErrors","isMuted","setIsMuted","handleOnChange","event","name","value","target","prevUserData","audio","document","getElementById","play","handleSubmit","preventDefault","login","handleMute","muted","onSubmit","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","placeholder","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/punto/Desktop/Proyecto Integrador/rick_and_morty/src/components/Form/Form.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { validate } from '../validation';\r\nimport \"./Form.css\"\r\nimport fondoForm from '../../assets/login-form.png'\r\nimport intro from '../../assets/RickAndMorty.mp3'\r\n\r\nconst Form = (props) => {\r\n    const [userData, setUserData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const [errors, setErrors] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const [isMuted, setIsMuted] = useState(false);\r\n\r\n    const handleOnChange = (event) => {//controlo para que el input sea siempre igual al valor del estado, en el input coloco el onChange\r\n      const { name, value } = event.target; //aplico destructuring\r\n      // Usar una función para actualizar el estado con el estado anterior\r\n      setUserData(prevUserData => ({// hago una copia del estado para no pisarlo y igualo a la propiedad name con value del target\r\n          ...prevUserData,\r\n          [name]: value\r\n      }));\r\n  \r\n      // Invocar la función de validación\r\n      const errors = validate({ ...userData, [name]: value });\r\n      setErrors(errors);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const audio = document.getElementById(\"myAudio\");\r\n        audio.play();\r\n    }, []);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        props.login(userData)\r\n    }\r\n\r\n    const handleMute = () => {\r\n        setIsMuted(!isMuted);\r\n        const audio = document.getElementById(\"myAudio\");\r\n        audio.muted = !audio.muted;\r\n    };\r\n    \r\n    return(\r\n        <form onSubmit={handleSubmit} className=\"form-container\">  \r\n            <div>\r\n                <img className=\"title\" src={fondoForm} alt=\"Login\" />\r\n                <label htmlFor=\"email\" className=\"title-middle-email\">email</label> \r\n                    <input className=\"title-input-email\" name=\"email\" type=\"email\" placeholder=\"Ingrese su email\" value={userData.email} onChange={handleOnChange} />\r\n                <span> </span>\r\n                <label htmlFor=\"password\" className=\"title-middle-password\">contraseña</label>\r\n                    <input className=\"title-input-password\" name=\"password\" type=\"password\" placeholder=\"Ingrese su contraseña\" value={userData.password} onChange={handleOnChange} />\r\n            </div>\r\n            <div>\r\n                <button className=\"btn\" disabled={!userData.email || !userData.password || errors.email || errors.password}>Enviar</button>\r\n            </div>\r\n\r\n            <div>\r\n                {errors.email && <span className=\"alert-error-message-mail\">{errors.email}</span>}\r\n                {errors.password && <span className=\"alert-error-message-pass\">{errors.password}</span>}\r\n                {userData.email && userData.password && !errors.email && !errors.password && (\r\n                    <>\r\n                        <div className=\"alert-success\">Sus datos son correctos Rick!</div>\r\n                        <div className=\"alert-successB\">Presiona enviar y Bienvenido!</div>\r\n                    </>\r\n                    )}\r\n            </div>   \r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { useState } from \"react\";\r\n\r\n// const Form = () => {\r\n//     const [userData, setUserData] = useState({\r\n//         email: '',\r\n//         password: ''\r\n//     })\r\n\r\n//     const [errors, setErrors] = useState({\r\n//         email: '',\r\n//         password: ''\r\n//     })\r\n\r\n//     const handleOnChange = (event) => {\r\n//         console.log(event.target.name);\r\n//         setUserData({\r\n//             ...userData,\r\n//             [event.target.name]: event.target.value\r\n//         })\r\n//         validate()\r\n//     }\r\n\r\n//     const validate = () => {\r\n//         if (!/\\S+@\\S+\\.\\S+/.test(userData.email)) {\r\n//           setErrors((prevState) => ({\r\n//             ...prevState,\r\n//             email: 'por favor, revisa tu email, rey/reina'\r\n//           }));\r\n//         } else {\r\n//           setErrors((prevState) => ({\r\n//             ...prevState,\r\n//             email: ''\r\n//           }));\r\n//         }\r\n    \r\n//         if (userData.password.length < 6) {\r\n//           setErrors((prevState) => ({\r\n//             ...prevState,\r\n//             password: 'tiene que tener un mínimo de 6 caracteres'\r\n//           }));\r\n//         } else {\r\n//           setErrors((prevState) => ({\r\n//             ...prevState,\r\n//             password: ''\r\n//           }));\r\n//         }\r\n//     };\r\n    \r\n    \r\n\r\n//     const handleOnSubmit = (event) => {\r\n//         event.preventDefault()\r\n//     }\r\n\r\n//     return(\r\n//         <form onSubmit={handleOnSubmit}>\r\n//             <h1>Holi, soy el Form</h1>\r\n\r\n//             <label htmlFor=\"email\">Email: </label>\r\n//             <input name=\"email\" type=\"email\" placeholder=\"ingrese su mail\" value={userData.email} onChange={handleOnChange} />\r\n//             {errors.email && <p>{errors.email}</p>}\r\n//             <hr />\r\n//             <label htmlFor=\"password\">Password: </label>\r\n//             <input name=\"password\" type=\"text\" placeholder=\"ingrese una password\" value={userData.password} onChange={handleOnChange}  />\r\n//             {errors.password && <p>{errors.password}</p>}\r\n//             <hr />\r\n//             <button disabled={!userData.email || !userData.password || errors.email || errors.password} >Enviar</button>\r\n//         </form>\r\n//     )\r\n// }\r\n\r\n// export default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}