{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from './types';\nconst initialState = {\n  myFavorites: [],\n  allCharacters: []\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_FAV:\n      const newFavorites = [...state.allCharacters, action.payload];\n      return {\n        ...state,\n        myFavorites: newFavorites,\n        allCharacters: newFavorites\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(fav => fav.id !== parseInt(action.payload))\n      };\n    case FILTER:\n      const allCharactersFiltered = state.allCharacters.filter(character => character.gender === action.payload);\n      return {\n        ...state,\n        myFavorites: action.payload === 'allCharacters' ? [...state.allCharactersFav] : allCharactersFiltered\n      };\n    case ORDER:\n      const allCharactersFavCopy = [...state.myFavorites]; // Usar spread operator para copiar el array\n      return {\n        ...state,\n        myFavorites: action.payload === 'A' ? allCharactersFavCopy.sort((a, b) => a.id - b.id) : allCharactersFavCopy.sort((a, b) => b.id - a.id)\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER","ORDER","initialState","myFavorites","allCharacters","reducer","state","arguments","length","undefined","action","type","newFavorites","payload","filter","fav","id","parseInt","allCharactersFiltered","character","gender","allCharactersFav","allCharactersFavCopy","sort","a","b"],"sources":["C:/Users/punto/Desktop/Proyecto Integrador/rick_and_morty/src/redux/reducer.js"],"sourcesContent":["import {ADD_FAV, REMOVE_FAV, FILTER,ORDER} from './types'\r\n\r\nconst initialState = {\r\n    myFavorites: [],\r\n    allCharacters: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_FAV:\r\n            const newFavorites = [...state.allCharacters, action.payload];\r\n            return {\r\n              ...state,\r\n              myFavorites: newFavorites,\r\n              allCharacters: newFavorites\r\n            };\r\n        case REMOVE_FAV:\r\n            return {\r\n                ...state,\r\n                myFavorites: state.myFavorites.filter(\r\n                    (fav) => fav.id !== parseInt(action.payload)\r\n                  )\r\n            }\r\n        case FILTER:\r\n            const allCharactersFiltered = state.allCharacters.filter(character => character.gender === action.payload)\r\n            return {\r\n                ...state,\r\n                myFavorites: \r\n                    action.payload === 'allCharacters'\r\n                    ? [...state.allCharactersFav]\r\n                    : allCharactersFiltered\r\n            }\r\n\r\n            case ORDER:\r\n                const allCharactersFavCopy = [...state.myFavorites]; // Usar spread operator para copiar el array\r\n                return {\r\n                  ...state,\r\n                  myFavorites:\r\n                    action.payload === 'A'\r\n                      ? allCharactersFavCopy.sort((a, b) => a.id - b.id)\r\n                      : allCharactersFavCopy.sort((a, b) => b.id - a.id)\r\n                };\r\n              \r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer;"],"mappings":"AAAA,SAAQA,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAACC,KAAK,QAAO,SAAS;AAEzD,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzC,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKb,OAAO;MACR,MAAMc,YAAY,GAAG,CAAC,GAAGN,KAAK,CAACF,aAAa,EAAEM,MAAM,CAACG,OAAO,CAAC;MAC7D,OAAO;QACL,GAAGP,KAAK;QACRH,WAAW,EAAES,YAAY;QACzBR,aAAa,EAAEQ;MACjB,CAAC;IACL,KAAKb,UAAU;MACX,OAAO;QACH,GAAGO,KAAK;QACRH,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACW,MAAM,CAChCC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKC,QAAQ,CAACP,MAAM,CAACG,OAAO,CAAC;MAEpD,CAAC;IACL,KAAKb,MAAM;MACP,MAAMkB,qBAAqB,GAAGZ,KAAK,CAACF,aAAa,CAACU,MAAM,CAACK,SAAS,IAAIA,SAAS,CAACC,MAAM,KAAKV,MAAM,CAACG,OAAO,CAAC;MAC1G,OAAO;QACH,GAAGP,KAAK;QACRH,WAAW,EACPO,MAAM,CAACG,OAAO,KAAK,eAAe,GAChC,CAAC,GAAGP,KAAK,CAACe,gBAAgB,CAAC,GAC3BH;MACV,CAAC;IAED,KAAKjB,KAAK;MACN,MAAMqB,oBAAoB,GAAG,CAAC,GAAGhB,KAAK,CAACH,WAAW,CAAC,CAAC,CAAC;MACrD,OAAO;QACL,GAAGG,KAAK;QACRH,WAAW,EACTO,MAAM,CAACG,OAAO,KAAK,GAAG,GAClBS,oBAAoB,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACR,EAAE,GAAGS,CAAC,CAACT,EAAE,CAAC,GAChDM,oBAAoB,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACT,EAAE,GAAGQ,CAAC,CAACR,EAAE;MACvD,CAAC;IAET;MACI,OAAO;QACH,GAAGV;MACP,CAAC;EAAA;AAEb,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}